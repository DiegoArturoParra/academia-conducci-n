// <auto-generated />
using DrivingAcademy.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DrivingAcademy.Migrations
{
    [DbContext(typeof(DrivingAcademyContext))]
    partial class DrivingAcademyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.7");

            modelBuilder.Entity("DrivingAcademy.Entities.InfoDrivingAcademy", b =>
                {
                    b.Property<int>("StudentId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LessonId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Active")
                        .HasColumnType("INTEGER");

                    b.HasKey("StudentId", "LessonId");

                    b.HasIndex("LessonId");

                    b.ToTable("TableDetails");

                    b.HasData(
                        new
                        {
                            StudentId = 1,
                            LessonId = 1,
                            Active = true
                        },
                        new
                        {
                            StudentId = 1,
                            LessonId = 3,
                            Active = true
                        },
                        new
                        {
                            StudentId = 2,
                            LessonId = 2,
                            Active = true
                        },
                        new
                        {
                            StudentId = 2,
                            LessonId = 4,
                            Active = true
                        });
                });

            modelBuilder.Entity("DrivingAcademy.Entities.Lesson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ModuleId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NameLesson")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ModuleId");

                    b.ToTable("TableLessons");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ModuleId = 1,
                            NameLesson = "adaptación 1"
                        },
                        new
                        {
                            Id = 2,
                            ModuleId = 1,
                            NameLesson = "adaptación 2"
                        },
                        new
                        {
                            Id = 3,
                            ModuleId = 2,
                            NameLesson = "Ética 1"
                        },
                        new
                        {
                            Id = 4,
                            ModuleId = 2,
                            NameLesson = "Ética 2"
                        });
                });

            modelBuilder.Entity("DrivingAcademy.Entities.Licence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("TableLicences");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            TypeName = "A1"
                        },
                        new
                        {
                            Id = 2,
                            TypeName = "A2"
                        },
                        new
                        {
                            Id = 3,
                            TypeName = "B1"
                        },
                        new
                        {
                            Id = 4,
                            TypeName = "B2"
                        },
                        new
                        {
                            Id = 5,
                            TypeName = "C1"
                        },
                        new
                        {
                            Id = 6,
                            TypeName = "C2"
                        });
                });

            modelBuilder.Entity("DrivingAcademy.Entities.Module", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("NameModule")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("TableModules");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            NameModule = "Adaptación"
                        },
                        new
                        {
                            Id = 2,
                            NameModule = "Ética"
                        },
                        new
                        {
                            Id = 3,
                            NameModule = "Marco Legal"
                        });
                });

            modelBuilder.Entity("DrivingAcademy.Entities.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<short>("Age")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Identification")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("TypeLicenceId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Identification")
                        .IsUnique();

                    b.HasIndex("TypeLicenceId");

                    b.ToTable("TableStudents");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = (short)23,
                            Identification = "1030692100",
                            Name = "Diego Molina",
                            TypeLicenceId = 1
                        },
                        new
                        {
                            Id = 2,
                            Age = (short)25,
                            Identification = "1039139838",
                            Name = "Laura Molina",
                            TypeLicenceId = 2
                        });
                });

            modelBuilder.Entity("DrivingAcademy.Entities.InfoDrivingAcademy", b =>
                {
                    b.HasOne("DrivingAcademy.Entities.Lesson", "Lesson")
                        .WithMany()
                        .HasForeignKey("LessonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DrivingAcademy.Entities.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lesson");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("DrivingAcademy.Entities.Lesson", b =>
                {
                    b.HasOne("DrivingAcademy.Entities.Module", "Module")
                        .WithMany()
                        .HasForeignKey("ModuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Module");
                });

            modelBuilder.Entity("DrivingAcademy.Entities.Student", b =>
                {
                    b.HasOne("DrivingAcademy.Entities.Licence", "TypeLicence")
                        .WithMany()
                        .HasForeignKey("TypeLicenceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TypeLicence");
                });
#pragma warning restore 612, 618
        }
    }
}
